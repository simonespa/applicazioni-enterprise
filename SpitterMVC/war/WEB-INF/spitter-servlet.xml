<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- Il wiring delle dipendenze è stato effettuato mediante il meccanismo 
		automatico dell'autowiring -->

	<!-- Permette a Spring di utilizzare le annotazioni e ricercare i bean nei 
		package specificati -->
	<context:component-scan base-package="spitter.dao" />
	<context:component-scan base-package="spitter.service" />
	<context:component-scan base-package="spitter.controller" />

	<!-- Transazioni gestite mediante AOP, con l'utilizzo delle annotazioni -->
	<tx:annotation-driven />
	<!-- Il modulo MVC gestito mediante annotazioni -->
	<mvc:annotation-driven />

	<!-- Definisce una sorgente dati con un "pool" di connessioni disponibili -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/spitter" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>

	<!-- Definisce la Session Factory di Hibernate, abilitando le annotazioni -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="spitter.dto" />
		<property name="schemaUpdate" value="true" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

	<!-- Abilita il Transaction Manager di Spring -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- Translates the Hibernate exceptions in Spring Exceptions -->
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<!-- Indica qual'è la cartella che contiene le risorse statiche -->
	<mvc:resources location="/resources/" mapping="/resources/**" />

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
	</bean>
	
	<!-- Definisce il Bean Validator -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

</beans>